// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudetnsAPI.Data;

#nullable disable

namespace StudetnsAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250205053923_AddInitialData")]
    partial class AddInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EstudianteMateria", b =>
                {
                    b.Property<int>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.HasKey("EstudianteId", "MateriaId");

                    b.HasIndex("MateriaId");

                    b.ToTable("EstudianteMateria");
                });

            modelBuilder.Entity("StudetnsAPI.Models.Entities.Estudiante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estudiantes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "juan.perez@example.com",
                            Nombre = "Juan Pérez"
                        },
                        new
                        {
                            Id = 2,
                            Email = "maria.gomez@example.com",
                            Nombre = "María Gómez"
                        },
                        new
                        {
                            Id = 3,
                            Email = "carlos.lopez@example.com",
                            Nombre = "Carlos López"
                        });
                });

            modelBuilder.Entity("StudetnsAPI.Models.Entities.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Creditos")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfesorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfesorId");

                    b.ToTable("Materias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Creditos = 3,
                            Nombre = "Matemáticas",
                            ProfesorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Creditos = 3,
                            Nombre = "Física",
                            ProfesorId = 1
                        },
                        new
                        {
                            Id = 3,
                            Creditos = 3,
                            Nombre = "Química",
                            ProfesorId = 2
                        },
                        new
                        {
                            Id = 4,
                            Creditos = 3,
                            Nombre = "Biología",
                            ProfesorId = 2
                        },
                        new
                        {
                            Id = 5,
                            Creditos = 3,
                            Nombre = "Historia",
                            ProfesorId = 3
                        },
                        new
                        {
                            Id = 6,
                            Creditos = 3,
                            Nombre = "Geografía",
                            ProfesorId = 3
                        },
                        new
                        {
                            Id = 7,
                            Creditos = 3,
                            Nombre = "Inglés",
                            ProfesorId = 4
                        },
                        new
                        {
                            Id = 8,
                            Creditos = 3,
                            Nombre = "Francés",
                            ProfesorId = 4
                        },
                        new
                        {
                            Id = 9,
                            Creditos = 3,
                            Nombre = "Arte",
                            ProfesorId = 5
                        },
                        new
                        {
                            Id = 10,
                            Creditos = 3,
                            Nombre = "Música",
                            ProfesorId = 5
                        });
                });

            modelBuilder.Entity("StudetnsAPI.Models.Entities.Profesor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Profesores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Profesor A"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Profesor B"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Profesor C"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Profesor D"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Profesor E"
                        });
                });

            modelBuilder.Entity("EstudianteMateria", b =>
                {
                    b.HasOne("StudetnsAPI.Models.Entities.Estudiante", null)
                        .WithMany()
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudetnsAPI.Models.Entities.Materia", null)
                        .WithMany()
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudetnsAPI.Models.Entities.Materia", b =>
                {
                    b.HasOne("StudetnsAPI.Models.Entities.Profesor", "Profesor")
                        .WithMany("Materias")
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("StudetnsAPI.Models.Entities.Profesor", b =>
                {
                    b.Navigation("Materias");
                });
#pragma warning restore 612, 618
        }
    }
}
